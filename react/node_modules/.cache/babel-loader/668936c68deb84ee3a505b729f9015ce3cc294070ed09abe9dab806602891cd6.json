{"ast":null,"code":"import _classCallCheck from\"C:/xampp/htdocs/dashboard/react-project-nchu-school-schedule/react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/xampp/htdocs/dashboard/react-project-nchu-school-schedule/react/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/xampp/htdocs/dashboard/react-project-nchu-school-schedule/react/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/xampp/htdocs/dashboard/react-project-nchu-school-schedule/react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import NameContext from'./nameContext.js';import Header from'./Header';import{Route,Routes}from'react-router';import Activity from'./Activity.js';import Product from'./Product.js';import Content from'./Content.js';import Login from'./Login.js';import Register from'./Register.js';import Teach from'./Teach.js';import Footer from'./Footer.js';//第一次物件創建時流程                   constructor() => static getDerivedStateFromProps(props,state) => render() => 渲染DOM => componentDidMount\n//第一次到第N次物件Props,State更新時流程 shouldComponentUpdate(nextProps,nextState) => getSnapshotBeforeUpdate(prevProps,prevState) => render() => 渲染DOM => componentDidUpdate\n//最後要刪除物件時觸發流程               componentWillUnmount()\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);//繼承props\n_this=_super.call(this,props);//宣告state\n_this.change=function(){_this.setState({name:_this.state.name,first:_this.state.first===false?true:false,width:_this.state.width});};_this.state={name:\"\",first:true,width:1000};//綁定changeName函式的this 為 class App 的 this\n//this.shorten = this.shorten.bind(this);\n//this.lengthen = this.lengthen.bind(this);\nreturn _this;}//changeName 給button onClick用的函式\n_createClass(App,[{key:\"componentDidMount\",value://componentDidMonut 用來修改render後的DOM樣式 // 可以fetch style DOM...\nfunction componentDidMount(){if(this.state.first===true){//this.shorten();\n}else{//this.lengthen();\n}}//componentWillUnmonut   時會觸發 delete\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){return;}//shouldComponentUpdate(nextProps,nextState) \n//return true 代表可以做 Update 的 render \n//return false 代表不可以做 Update 的 render\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextState.first!==this.state.first){return true;}else{return false;}}//getSnapshotBeforeUpdate 在 render 與 render產生DOM 之間把目前狀態做儲存可以用\n},{key:\"getSnapshotBeforeUpdate\",value:function getSnapshotBeforeUpdate(prevProps,prevState){return null;}//componentDidUpdate 更新後可以修改 render 的 DOM 內容樣式 // fetch DOM style js...\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(this.state.first===true){clearTimeout(this.tm2);}else{clearTimeout(this.tm);}}},{key:\"componentDidCatch\",value:function componentDidCatch(error,errorInfo){// You can also log the error to an error reporting service\nconsole.log(error,errorInfo);}//render 渲染的return (DOM);\n},{key:\"render\",value:function render(){if(this.state.hasError){// You can render any custom fallback UI\nreturn/*#__PURE__*/_jsx(\"h1\",{children:\"\\u7CFB\\u7D71\\u51FA\\u932F!!\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{first:this.state.first}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project/Teach\",element:/*#__PURE__*/_jsx(Teach,{first:this.state.first,width:this.state.width,handlefirst:this.change})}),/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project/Register\",element:/*#__PURE__*/_jsx(Register,{first:this.state.first,width:this.state.width,handlefirst:this.change})}),/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project/Login\",element:/*#__PURE__*/_jsx(Login,{first:this.state.first,width:this.state.width,handlefirst:this.change})}),/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project/Activity\",element:/*#__PURE__*/_jsx(Activity,{first:this.state.first,width:this.state.width,handlefirst:this.change})}),/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project/Product\",element:/*#__PURE__*/_jsx(Product,{first:this.state.first,width:this.state.width,handlefirst:this.change})}),/*#__PURE__*/_jsx(Route,{path:\"/App/practice_project\",element:/*#__PURE__*/_jsx(Content,{first:this.state.first,width:this.state.width,handlefirst:this.change})})]}),/*#__PURE__*/_jsx(Footer,{})]});}}],[{key:\"getDerivedStateFromProps\",value:/*   shorten = (newName) => {\n    if (this.state.width >= 990) {\n      const len = this.state.width - 1;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"msg\").style.height = (len.toString() + \"px\");\n      this.tm = setTimeout(this.shorten, 20);\n    }\n    else {\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  }\n\n  lengthen = (newName) => {\n    if (this.state.width <= 999) {\n      const len = this.state.width + 1;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"msg\").style.height = (len + \"px\");\n      this.tm2 = setTimeout(this.lengthen, 20);\n    }\n    else {\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  } */ //DerivedStateFromProps 用props來修改state的render phase\nfunction getDerivedStateFromProps(props,state){if(state.first===true)return{name:\"新的1\",first:state.first};else return{name:\"新的2\",first:state.first};}},{key:\"getDerivedStateFromError\",value:function getDerivedStateFromError(error){// Update state so the next render will show the fallback UI.\nreturn{hasError:true};}}]);return App;}(Component);App.contextType=NameContext;export default App;","map":{"version":3,"names":["React","Component","NameContext","Header","Route","Routes","Activity","Product","Content","Login","Register","Teach","Footer","App","props","change","setState","name","state","first","width","nextProps","nextState","prevProps","prevState","snapshot","clearTimeout","tm2","tm","error","errorInfo","console","log","hasError","contextType"],"sources":["C:/xampp/htdocs/dashboard/react-project-nchu-school-schedule/react/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport NameContext from './nameContext.js'\nimport Header from './Header';\nimport { Route, Routes } from 'react-router';\nimport Activity from './Activity.js';\nimport Product from './Product.js';\nimport Content from './Content.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport Teach from './Teach.js';\nimport Footer from './Footer.js';\n//第一次物件創建時流程                   constructor() => static getDerivedStateFromProps(props,state) => render() => 渲染DOM => componentDidMount\n//第一次到第N次物件Props,State更新時流程 shouldComponentUpdate(nextProps,nextState) => getSnapshotBeforeUpdate(prevProps,prevState) => render() => 渲染DOM => componentDidUpdate\n//最後要刪除物件時觸發流程               componentWillUnmount()\nclass App extends Component {\n  static contextType = NameContext;\n  constructor(props) {\n    //繼承props\n    super(props);\n    //宣告state\n    this.state = {\n      name: \"\",\n      first: true,\n      width: 1000\n    }\n    //綁定changeName函式的this 為 class App 的 this\n    //this.shorten = this.shorten.bind(this);\n    //this.lengthen = this.lengthen.bind(this);\n  }\n  //changeName 給button onClick用的函式\n  change = () => {\n    this.setState({\n      name: this.state.name,\n      first: this.state.first === false ? true : false,\n      width: this.state.width\n    }\n    )\n  }\n/*   shorten = (newName) => {\n    if (this.state.width >= 990) {\n      const len = this.state.width - 1;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"msg\").style.height = (len.toString() + \"px\");\n      this.tm = setTimeout(this.shorten, 20);\n    }\n    else {\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  }\n\n  lengthen = (newName) => {\n    if (this.state.width <= 999) {\n      const len = this.state.width + 1;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"msg\").style.height = (len + \"px\");\n      this.tm2 = setTimeout(this.lengthen, 20);\n    }\n    else {\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  } */\n\n  //DerivedStateFromProps 用props來修改state的render phase\n  static getDerivedStateFromProps(props, state) {\n    if (state.first === true)\n      return { name: \"新的1\", first: state.first };\n    else\n      return { name: \"新的2\", first: state.first };\n  }\n  //componentDidMonut 用來修改render後的DOM樣式 // 可以fetch style DOM...\n  componentDidMount() {\n    if (this.state.first === true) {\n      //this.shorten();\n    }\n    else {\n      //this.lengthen();\n    }\n  }\n  //componentWillUnmonut   時會觸發 delete\n  componentWillUnmount() {\n    return;\n  }\n  //shouldComponentUpdate(nextProps,nextState) \n  //return true 代表可以做 Update 的 render \n  //return false 代表不可以做 Update 的 render\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.first !== this.state.first) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  //getSnapshotBeforeUpdate 在 render 與 render產生DOM 之間把目前狀態做儲存可以用\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return null;\n  }\n  //componentDidUpdate 更新後可以修改 render 的 DOM 內容樣式 // fetch DOM style js...\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.first === true) {\n      clearTimeout(this.tm2);\n    }\n    else {\n      clearTimeout(this.tm);\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  //render 渲染的return (DOM);\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>系統出錯!!</h1>;\n    }\n    return (\n      <>\n        \n        <Header first={this.state.first}/>\n        <Routes>\n          <Route path=\"/App/practice_project/Teach\" element={<Teach first={this.state.first} width={this.state.width} handlefirst={this.change}></Teach>}></Route>\n          <Route path=\"/App/practice_project/Register\" element={<Register first={this.state.first} width={this.state.width} handlefirst={this.change}></Register>}></Route>\n          <Route path=\"/App/practice_project/Login\" element={<Login first={this.state.first} width={this.state.width} handlefirst={this.change}></Login>}></Route>\n          <Route path=\"/App/practice_project/Activity\" element={<Activity first={this.state.first} width={this.state.width} handlefirst={this.change}></Activity>}></Route>\n          <Route path=\"/App/practice_project/Product\" element={<Product first={this.state.first} width={this.state.width} handlefirst={this.change}></Product>}></Route>\n          <Route path=\"/App/practice_project\" element={<Content first={this.state.first} width={this.state.width} handlefirst={this.change}></Content>}></Route>\n        </Routes>\n        <Footer/>\n      </>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}