{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\dashboard\\\\practice_project\\\\hello-world\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport NameContext from './nameContext.js';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Content from './Content';\n\n//第一次物件創建時流程                   constructor() => static getDerivedStateFromProps(props,state) => render() => 渲染DOM => componentDidMount\n//第一次到第N次物件Props,State更新時流程 shouldComponentUpdate(nextProps,nextState) => getSnapshotBeforeUpdate(prevProps,prevState) => render() => 渲染DOM => componentDidUpdate\n//最後要刪除物件時觸發流程               componentWillUnmount()\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    //繼承props\n    super(props);\n    //宣告state\n    this.shorten = newName => {\n      if (this.state.width >= 300) {\n        const len = this.state.width - 5;\n        this.setState({\n          name: this.state.name,\n          first: this.state.first,\n          width: len\n        });\n        document.getElementById(\"content\").style.width = len + \"px\";\n        document.getElementById(\"msg\").style.width = len + \"px\";\n        setTimeout(this.shorten, 100);\n      } else {\n        alert('ww');\n        this.setState({\n          name: this.state.name,\n          first: this.state.first === false ? true : false,\n          width: this.state.width\n        });\n      }\n    };\n    this.lengthen = newName => {\n      if (this.state.width <= 1000) {\n        const len = this.state.width + 5;\n        this.setState({\n          name: this.state.name,\n          first: this.state.first,\n          width: len\n        });\n        document.getElementById(\"content\").style.width = len + \"px\";\n        document.getElementById(\"msg\").style.width = len + \"px\";\n        setTimeout(this.lengthen, 100);\n      } else {\n        alert('ww');\n        this.setState({\n          name: this.state.name,\n          first: this.state.first === false ? true : false,\n          width: this.state.width\n        });\n      }\n    };\n    this.state = {\n      name: \"\",\n      first: true,\n      width: 1000\n    };\n    //綁定changeName函式的this 為 class App 的 this\n    this.shorten = this.shorten.bind(this);\n    this.lengthen = this.lengthen.bind(this);\n  }\n  //changeName 給button onClick用的函式\n\n  //DerivedStateFromProps 用props來修改state的render phase\n  static getDerivedStateFromProps(props, state) {\n    if (state.first === true) return {\n      name: \"新的1\",\n      first: state.first\n    };else return {\n      name: \"新的2\",\n      first: state.first\n    };\n  }\n  //componentDidMonut 用來修改render後的DOM樣式 // 可以fetch style DOM...\n  componentDidMount() {\n    if (this.state.first === true) {\n      this.shorten();\n    } else {\n      this.lengthen();\n    }\n  }\n  //componentWillUnmonut   時會觸發 delete\n  componentWillUnmount() {\n    return;\n  }\n  //shouldComponentUpdate(nextProps,nextState) \n  //return true 代表可以做 Update 的 render \n  //return false 代表不可以做 Update 的 render\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.first !== this.state.first) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //getSnapshotBeforeUpdate 在 render 與 render產生DOM 之間把目前狀態做儲存可以用\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return null;\n  }\n  //componentDidUpdate 更新後可以修改 render 的 DOM 內容樣式 // fetch DOM style js...\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.first === true) {\n      clearTimeout();\n      this.shorten();\n    } else {\n      clearTimeout();\n      this.lengthen();\n    }\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  //render 渲染的return (DOM);\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u7CFB\\u7D71\\u51FA\\u932F!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        first: this.state.first\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.shorten,\n        children: this.context.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.lengthen,\n        children: this.context.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nApp.contextType = NameContext;\nexport default App;","map":{"version":3,"names":["React","Component","NameContext","Header","Footer","Content","App","constructor","props","shorten","newName","state","width","len","setState","name","first","document","getElementById","style","setTimeout","alert","lengthen","bind","getDerivedStateFromProps","componentDidMount","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot","clearTimeout","getDerivedStateFromError","error","hasError","componentDidCatch","errorInfo","console","log","render","context","contextType"],"sources":["C:/xampp/htdocs/dashboard/practice_project/hello-world/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport NameContext from './nameContext.js'\nimport Header from './Header';\nimport Footer from './Footer';\nimport Content from './Content';\n\n//第一次物件創建時流程                   constructor() => static getDerivedStateFromProps(props,state) => render() => 渲染DOM => componentDidMount\n//第一次到第N次物件Props,State更新時流程 shouldComponentUpdate(nextProps,nextState) => getSnapshotBeforeUpdate(prevProps,prevState) => render() => 渲染DOM => componentDidUpdate\n//最後要刪除物件時觸發流程               componentWillUnmount()\nclass App extends Component {\n  static contextType = NameContext;\n  constructor(props) {\n    //繼承props\n    super(props);\n    //宣告state\n    this.state = {\n      name: \"\",\n      first: true,\n      width: 1000\n    }\n    //綁定changeName函式的this 為 class App 的 this\n    this.shorten = this.shorten.bind(this);\n    this.lengthen = this.lengthen.bind(this);\n  }\n  //changeName 給button onClick用的函式\n  shorten = (newName) => {\n    if (this.state.width >= 300) {\n      const len = this.state.width - 5;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"content\").style.width = (len + \"px\");\n      document.getElementById(\"msg\").style.width = (len + \"px\");\n      setTimeout(this.shorten, 100);\n    }\n    else {\n      alert('ww');\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  }\n\n  lengthen = (newName) => {\n    if (this.state.width <= 1000) {\n      const len = this.state.width + 5;\n      this.setState({\n        name: this.state.name,\n        first: this.state.first,\n        width: len\n      }\n      )\n      document.getElementById(\"content\").style.width = (len + \"px\");\n      document.getElementById(\"msg\").style.width = (len + \"px\");\n      setTimeout(this.lengthen, 100);\n    }\n    else {\n      alert('ww');\n      this.setState({\n        name: this.state.name,\n        first: this.state.first === false ? true : false,\n        width: this.state.width\n      }\n      )\n    }\n  }\n\n  //DerivedStateFromProps 用props來修改state的render phase\n  static getDerivedStateFromProps(props, state) {\n    if (state.first === true)\n      return { name: \"新的1\", first: state.first };\n    else\n      return { name: \"新的2\", first: state.first };\n  }\n  //componentDidMonut 用來修改render後的DOM樣式 // 可以fetch style DOM...\n  componentDidMount() {\n    if (this.state.first === true) {\n      this.shorten();\n    }\n    else {\n      this.lengthen();\n    }\n  }\n  //componentWillUnmonut   時會觸發 delete\n  componentWillUnmount() {\n    return;\n  }\n  //shouldComponentUpdate(nextProps,nextState) \n  //return true 代表可以做 Update 的 render \n  //return false 代表不可以做 Update 的 render\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.first !== this.state.first) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  //getSnapshotBeforeUpdate 在 render 與 render產生DOM 之間把目前狀態做儲存可以用\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return null;\n  }\n  //componentDidUpdate 更新後可以修改 render 的 DOM 內容樣式 // fetch DOM style js...\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.first === true) {\n      clearTimeout();\n      this.shorten();\n    }\n    else {\n      clearTimeout();\n      this.lengthen();\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  //render 渲染的return (DOM);\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>系統出錯!!</h1>;\n    }\n    return (\n      <>\n        <Header />\n        <Content first={this.state.first}>\n        </Content>\n        <button onClick={this.shorten}>\n          {this.context.name}\n        </button>\n        <button onClick={this.lengthen}>\n          {this.context.name}\n        </button>\n        <Footer />\n      </>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}