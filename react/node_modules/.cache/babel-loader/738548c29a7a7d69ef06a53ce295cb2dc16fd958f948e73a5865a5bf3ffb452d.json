{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.default = fetch;\nvar _nodeFetch = require('node-fetch');\nvar _nodeFetch2 = _interopRequireDefault(_nodeFetch);\nvar _proxyFromEnv = require('proxy-from-env');\nvar _url = require('url');\nvar _http = require('http');\nvar _http2 = _interopRequireDefault(_http);\nvar _https = require('https');\nvar _https2 = _interopRequireDefault(_https);\nvar _tunnelAgent = require('tunnel-agent');\nvar _tunnelAgent2 = _interopRequireDefault(_tunnelAgent);\nvar _nodeAbortController = require('node-abort-controller');\nvar _nodeAbortController2 = _interopRequireDefault(_nodeAbortController);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar DefaultOptions = {\n  keepAlive: true,\n  timeout: 1000,\n  keepAliveMsecs: 500,\n  maxSockets: 200,\n  maxFreeSockets: 5,\n  maxCachedSessions: 500\n};\nvar selectAgentOptions = function selectAgentOptions(options) {\n  var _DefaultOptions$optio = _extends({}, DefaultOptions, options),\n    keepAlive = _DefaultOptions$optio.keepAlive,\n    timeout = _DefaultOptions$optio.timeout,\n    keepAliveMsecs = _DefaultOptions$optio.keepAliveMsecs,\n    maxSockets = _DefaultOptions$optio.maxSockets,\n    maxFreeSockets = _DefaultOptions$optio.maxFreeSockets,\n    maxCachedSessions = _DefaultOptions$optio.maxCachedSessions;\n  return {\n    keepAlive: keepAlive,\n    timeout: timeout,\n    keepAliveMsecs: keepAliveMsecs,\n    maxSockets: maxSockets,\n    maxFreeSockets: maxFreeSockets,\n    maxCachedSessions: maxCachedSessions\n  };\n};\nvar capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase().concat(string.slice(1));\n};\nvar parseProxy = function parseProxy(url, proxyurl) {\n  var proxyObject = (0, _url.parse)(proxyurl || '');\n  var proxyProtocol = proxyObject.protocol.replace(':', '');\n  var proxyPort = proxyObject.port || (proxyProtocol === 'https' ? 443 : 80);\n  proxyObject.port = proxyPort;\n  proxyObject.tunnelMethod = url.protocol.replace(':', '').concat('Over').concat(capitalizeFirstLetter(proxyProtocol));\n  return proxyObject;\n};\nvar chooseAgent = function chooseAgent(url, options) {\n  return url.protocol === 'https:' ? new _https2.default.Agent(options) : new _http2.default.Agent(options);\n};\nvar buildTunnel = function buildTunnel(proxy, options) {\n  return _tunnelAgent2.default[proxy.tunnelMethod](_extends({}, options, {\n    proxy: {\n      port: proxy.port,\n      host: proxy.hostname,\n      proxyAuth: proxy.auth\n    }\n  }));\n};\nfunction fetch(url, options) {\n  var opts = options || {};\n  var AgentOptions = selectAgentOptions(opts);\n  var parsedURL = (0, _url.parse)(url);\n  var proxyurl = (0, _proxyFromEnv.getProxyForUrl)(parsedURL.href);\n  var agent = void 0;\n  if (proxyurl) {\n    var parsedProxyURL = parseProxy(parsedURL, proxyurl);\n    if (parsedProxyURL.tunnelMethod.startsWith('httpOver')) {\n      parsedURL.path = parsedURL.protocol.concat('//').concat(parsedURL.host).concat(parsedURL.path);\n      parsedURL.port = parsedProxyURL.port;\n      parsedURL.host = parsedProxyURL.host;\n      parsedURL.hostname = parsedProxyURL.hostname;\n      parsedURL.auth = parsedProxyURL.auth;\n      agent = chooseAgent(parsedURL, AgentOptions);\n    } else {\n      agent = buildTunnel(parsedProxyURL, AgentOptions) || chooseAgent(parsedURL, AgentOptions);\n    }\n  } else {\n    agent = chooseAgent(parsedURL, AgentOptions);\n  }\n  if (!opts.signal) {\n    var controller = new _nodeAbortController2.default();\n    opts.signal = controller.signal;\n  }\n  opts.signal.addEventListener('abort', function () {\n    if (agent.destroy) {\n      agent.destroy();\n    }\n    agent = null;\n  });\n  return (0, _nodeFetch2.default)(parsedURL, _extends({}, options, {\n    agent: agent\n  }));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","fetch","_nodeFetch","require","_nodeFetch2","_interopRequireDefault","_proxyFromEnv","_url","_http","_http2","_https","_https2","_tunnelAgent","_tunnelAgent2","_nodeAbortController","_nodeAbortController2","obj","__esModule","DefaultOptions","keepAlive","timeout","keepAliveMsecs","maxSockets","maxFreeSockets","maxCachedSessions","selectAgentOptions","options","_DefaultOptions$optio","capitalizeFirstLetter","string","charAt","toUpperCase","concat","slice","parseProxy","url","proxyurl","proxyObject","parse","proxyProtocol","protocol","replace","proxyPort","port","tunnelMethod","chooseAgent","Agent","buildTunnel","proxy","host","hostname","proxyAuth","auth","opts","AgentOptions","parsedURL","getProxyForUrl","href","agent","parsedProxyURL","startsWith","path","signal","controller","addEventListener","destroy"],"sources":["C:/xampp/htdocs/dashboard/practice_project/hello-world/node_modules/fetch-with-proxy/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = fetch;\n\nvar _nodeFetch = require('node-fetch');\n\nvar _nodeFetch2 = _interopRequireDefault(_nodeFetch);\n\nvar _proxyFromEnv = require('proxy-from-env');\n\nvar _url = require('url');\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _https = require('https');\n\nvar _https2 = _interopRequireDefault(_https);\n\nvar _tunnelAgent = require('tunnel-agent');\n\nvar _tunnelAgent2 = _interopRequireDefault(_tunnelAgent);\n\nvar _nodeAbortController = require('node-abort-controller');\n\nvar _nodeAbortController2 = _interopRequireDefault(_nodeAbortController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DefaultOptions = {\n    keepAlive: true,\n    timeout: 1000,\n    keepAliveMsecs: 500,\n    maxSockets: 200,\n    maxFreeSockets: 5,\n    maxCachedSessions: 500\n};\n\nvar selectAgentOptions = function selectAgentOptions(options) {\n    var _DefaultOptions$optio = _extends({}, DefaultOptions, options),\n        keepAlive = _DefaultOptions$optio.keepAlive,\n        timeout = _DefaultOptions$optio.timeout,\n        keepAliveMsecs = _DefaultOptions$optio.keepAliveMsecs,\n        maxSockets = _DefaultOptions$optio.maxSockets,\n        maxFreeSockets = _DefaultOptions$optio.maxFreeSockets,\n        maxCachedSessions = _DefaultOptions$optio.maxCachedSessions;\n\n    return {\n        keepAlive: keepAlive,\n        timeout: timeout,\n        keepAliveMsecs: keepAliveMsecs,\n        maxSockets: maxSockets,\n        maxFreeSockets: maxFreeSockets,\n        maxCachedSessions: maxCachedSessions\n    };\n};\n\nvar capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase().concat(string.slice(1));\n};\n\nvar parseProxy = function parseProxy(url, proxyurl) {\n    var proxyObject = (0, _url.parse)(proxyurl || '');\n    var proxyProtocol = proxyObject.protocol.replace(':', '');\n    var proxyPort = proxyObject.port || (proxyProtocol === 'https' ? 443 : 80);\n    proxyObject.port = proxyPort;\n    proxyObject.tunnelMethod = url.protocol.replace(':', '').concat('Over').concat(capitalizeFirstLetter(proxyProtocol));\n    return proxyObject;\n};\n\nvar chooseAgent = function chooseAgent(url, options) {\n    return url.protocol === 'https:' ? new _https2.default.Agent(options) : new _http2.default.Agent(options);\n};\n\nvar buildTunnel = function buildTunnel(proxy, options) {\n    return _tunnelAgent2.default[proxy.tunnelMethod](_extends({}, options, {\n        proxy: {\n            port: proxy.port,\n            host: proxy.hostname,\n            proxyAuth: proxy.auth\n        } }));\n};\n\nfunction fetch(url, options) {\n    var opts = options || {};\n    var AgentOptions = selectAgentOptions(opts);\n    var parsedURL = (0, _url.parse)(url);\n    var proxyurl = (0, _proxyFromEnv.getProxyForUrl)(parsedURL.href);\n    var agent = void 0;\n    if (proxyurl) {\n        var parsedProxyURL = parseProxy(parsedURL, proxyurl);\n        if (parsedProxyURL.tunnelMethod.startsWith('httpOver')) {\n            parsedURL.path = parsedURL.protocol.concat('//').concat(parsedURL.host).concat(parsedURL.path);\n            parsedURL.port = parsedProxyURL.port;\n            parsedURL.host = parsedProxyURL.host;\n            parsedURL.hostname = parsedProxyURL.hostname;\n            parsedURL.auth = parsedProxyURL.auth;\n            agent = chooseAgent(parsedURL, AgentOptions);\n        } else {\n            agent = buildTunnel(parsedProxyURL, AgentOptions) || chooseAgent(parsedURL, AgentOptions);\n        }\n    } else {\n        agent = chooseAgent(parsedURL, AgentOptions);\n    }\n    if (!opts.signal) {\n        var controller = new _nodeAbortController2.default();\n        opts.signal = controller.signal;\n    }\n    opts.signal.addEventListener('abort', function () {\n        if (agent.destroy) {\n            agent.destroy();\n        }\n        agent = null;\n    });\n\n    return (0, _nodeFetch2.default)(parsedURL, _extends({}, options, {\n        agent: agent\n    }));\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}